buildscript {
	ext {
		springBootVersion = '1.5.9.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'

group = 'es.davidgfolch.caravelo.marketingResearchSystem'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
	mavenCentral()
}


dependencies {
	compile('org.springframework.boot:spring-boot-starter-data-rest')
	testCompile('org.springframework.boot:spring-boot-starter-test')
}

test {
	outputs.upToDateWhen { false }
	testLogging {
		// Make sure output from
		// standard out or error is shown
		// in Gradle output.
		showStandardStreams = true
 
		// Or we use events method:
		// events 'standard_out', 'standard_error'
 
		// Or set property events:
		// events = ['standard_out', 'standard_error']
 
		// Instead of string values we can
		// use enum values:
		// events org.gradle.api.tasks.testing.logging.TestLogEvent.STANDARD_OUT,
		//        org.gradle.api.tasks.testing.logging.TestLogEvent.STANDARD_ERROR,
	}
}